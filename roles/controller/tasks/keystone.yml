- name: ensure keystone package is installed
  apt: pkg={{ item }}
  with_items:
    - keystone
    - python-keystone
    - python-keystoneclient
  notify: start keystone
  
- name: ensure sqlite keystone database is deleted
  file: dest=/var/lib/keystone/keystone.db state=absent

- name: ensure keystone config script is present
  template: >
    src=etc/keystone/keystone.conf
    dest=/etc/keystone/keystone.conf
    owner=keystone
    group=keystone
    mode=0600
  notify: restart keystone

- name: DB sync for keystone
  shell: >
    /usr/bin/keystone-manage db_sync
  notify: restart keystone

# Tenants, roles and keystone users creation

- name: create default tenant
  keystone_user: token={{ admin_token }} tenant=demo tenant_description="Default Tenant"

- name: create admin user
  keystone_user: >
    token={{ admin_token }}
    user=admin
    tenant=demo
    password={{ admin_pass }}

- name: create admin role and associate it with admin user
  keystone_user: token=$admin_token role=admin user=admin tenant=demo

- name: create service tenant
  keystone_user: token=$admin_token tenant=service tenant_description="Service Tenant"

- name: create users for each of the services
  keystone_user: >
    token={{ admin_token }}
    user=${item.name}
    tenant=service
    password={{ item.password }}
  with_items: $service_users

- name: add each of the service users to the service tenant with the admin role
  keystone_user: token={{ admin_token }} role=admin user=${item.name} tenant=service
  with_items: $service_users

# keystone-service from openstackansible-modules is still needed
# https://github.com/lorin/openstack-ansible-modules

- name: add services
  keystone_service: >
    token={{ admin_token }}
    name=${item.name}
    type=${item.type}
    description="${item.description}"
    public_url=${item.public_url}
    internal_url=${item.internal_url}
    admin_url=${item.admin_url}
    region=$region
  with_items: $services
  tags: keystone
