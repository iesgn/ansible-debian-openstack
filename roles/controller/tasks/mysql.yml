- name: ensure mysql and mysql python client are installed
  apt: pkg=$item
  with_items:
    - python-mysqldb
    - mysql-server

- name: mysql config file that binds to all interfaces
  copy: src=etc/my.cnf dest=/etc/mysql/my.cnf owner=root group=root mode=0644
  notify: restart mysql

# http://dev.mysql.com/doc/refman/5.6/en/default-privileges.html
- name: update mysql root password for all root accounts
  mysql_user: >
    name=root
    host=localhost
    password={{ root_db_password }}

# Need to do this for idempotency, see
# http://ansible.cc/docs/modules.html#mysql-user
- name: copy .my.cnf file with root password credentials
  template: >
    src=root/.my.cnf
    dest=/root/.my.cnf
    owner=root
    mode=0600

- name: update mysql root password for all root accounts
  mysql_user: >
    name=root
    host={{ item }}
    password={{ root_db_password }}
  with_items:
    - $controller_ip
    - 127.0.0.1

- name: ensure anonymous users are not in the database
  mysql_user: name='' host={{ item }} state=absent
  with_items:
    - $controller_ip
    - $inventory_hostname_short
    - 127.0.0.1
    - ::1

- name: ensure keystone database is present
  mysql_db: name=keystone

- name: ensure keystone database user is present
  mysql_user: >
    name=keystone host={{ item }}
    password={{ keystone_db_password }}
    priv=keystone.*:ALL
  with_items:
    - $controller_ip
    - 127.0.0.1
    - localhost
    - ::1

- name: ensure glance database is present
  mysql_db: name=glance

- name: ensure glance database user is present
  mysql_user: >
    name=glance
    host={{ item }}
    password={{ glance_db_password }}
    priv=glance.*:ALL
  with_items:
    - $storage_ip
    - 127.0.0.1
    - localhost
    - ::1

- name: ensure cinder database is present
  mysql_db: name=cinder

- name: ensure cinder database user is present
  mysql_user: >
    name=cinder
    host={{ item }}
    password={{ cinder_db_password }}
    priv=cinder.*:ALL
  with_items:
    - $storage_ip
    - 127.0.0.1
    - localhost
    - ::1

- name: ensure nova database is present
  mysql_db: name=nova

- name: ensure nova database user is present
  mysql_user: >
    name=nova
    host={{ item }}
    password={{ nova_db_password }}
    priv=nova.*:ALL
  with_items:
    - '%'
    - localhost
      
- name: ensure quantum database is present
  mysql_db: name=quantum
    
- name: ensure quantum database user is present
  mysql_user: >
    name=quantum
    host={{ item }}
    password={{ quantum_db_password }}
    priv=quantum.*:ALL
  with_items:
    - $controller_ip
    - 127.0.0.1
    - localhost
    - ::1
                   